// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`IconSwitch component should render disabled switch 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": undefined,
      "borderColor": undefined,
      "borderRadius": 100,
      "borderWidth": 2,
      "display": "flex",
      "height": 32,
      "justifyContent": "center",
      "opacity": 1,
      "width": 52,
    }
  }
>
  <View
    collapsable={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": undefined,
          "borderRadius": 23,
          "display": "flex",
          "height": 16,
          "justifyContent": "center",
          "marginHorizontal": 6,
          "width": 16,
        },
        {
          "transform": [
            {
              "translateX": 0,
            },
          ],
          "transition": "transform 50ms ease-in-out",
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`IconSwitch component should render disabled switch with turned on state 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": undefined,
      "borderColor": undefined,
      "borderRadius": 100,
      "borderWidth": 0,
      "display": "flex",
      "height": 32,
      "justifyContent": "center",
      "opacity": 1,
      "width": 52,
    }
  }
>
  <View
    collapsable={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 251, 254, 1)",
          "borderRadius": 23,
          "display": "flex",
          "height": 24,
          "justifyContent": "center",
          "marginHorizontal": 6,
          "width": 24,
        },
        {
          "transform": [
            {
              "translateX": 18,
            },
          ],
          "transition": "transform 50ms ease-in-out",
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`IconSwitch component should render disabled switch with turned on state and icon 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": undefined,
      "borderColor": undefined,
      "borderRadius": 100,
      "borderWidth": 0,
      "display": "flex",
      "height": 32,
      "justifyContent": "center",
      "opacity": 1,
      "width": 52,
    }
  }
>
  <View
    collapsable={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 251, 254, 1)",
          "borderRadius": 23,
          "display": "flex",
          "height": 24,
          "justifyContent": "center",
          "marginHorizontal": 2,
          "width": 24,
        },
        {
          "transform": [
            {
              "translateX": 22,
            },
          ],
          "transition": "transform 50ms ease-in-out",
        },
        undefined,
      ]
    }
  >
    <Text
      allowFontScaling={true}
      maxFontSizeMultiplier={100}
      selectable={false}
      style={
        [
          {
            "color": "rgba(28, 27, 31, 1)",
            "fontSize": 16,
          },
          {},
          {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {},
        ]
      }
    >
      î—Š
    </Text>
  </View>
</View>
`;

exports[`IconSwitch component should render with default props 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": undefined,
      "borderColor": "rgba(121, 116, 126, 1)",
      "borderRadius": 100,
      "borderWidth": 2,
      "display": "flex",
      "height": 32,
      "justifyContent": "center",
      "opacity": 1,
      "width": 52,
    }
  }
>
  <View
    collapsable={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(28, 27, 31, 1)",
          "borderRadius": 23,
          "display": "flex",
          "height": 16,
          "justifyContent": "center",
          "marginHorizontal": 6,
          "width": 16,
        },
        {
          "transform": [
            {
              "translateX": 0,
            },
          ],
          "transition": "transform 50ms ease-in-out",
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`IconSwitch component should render with turned on state 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "rgba(103, 80, 164, 1)",
      "borderColor": undefined,
      "borderRadius": 100,
      "borderWidth": 0,
      "display": "flex",
      "height": 32,
      "justifyContent": "center",
      "opacity": 1,
      "width": 52,
    }
  }
>
  <View
    collapsable={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 1)",
          "borderRadius": 23,
          "display": "flex",
          "height": 24,
          "justifyContent": "center",
          "marginHorizontal": 6,
          "width": 24,
        },
        {
          "transform": [
            {
              "translateX": 18,
            },
          ],
          "transition": "transform 50ms ease-in-out",
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`IconSwitch component should render with turned on state and icon 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "rgba(103, 80, 164, 1)",
      "borderColor": undefined,
      "borderRadius": 100,
      "borderWidth": 0,
      "display": "flex",
      "height": 32,
      "justifyContent": "center",
      "opacity": 1,
      "width": 52,
    }
  }
>
  <View
    collapsable={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 1)",
          "borderRadius": 23,
          "display": "flex",
          "height": 24,
          "justifyContent": "center",
          "marginHorizontal": 2,
          "width": 24,
        },
        {
          "transform": [
            {
              "translateX": 22,
            },
          ],
          "transition": "transform 50ms ease-in-out",
        },
        undefined,
      ]
    }
  >
    <Text
      allowFontScaling={true}
      maxFontSizeMultiplier={100}
      selectable={false}
      style={
        [
          {
            "color": "rgba(28, 27, 31, 1)",
            "fontSize": 16,
          },
          {},
          {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {},
        ]
      }
    >
      î—Š
    </Text>
  </View>
</View>
`;
